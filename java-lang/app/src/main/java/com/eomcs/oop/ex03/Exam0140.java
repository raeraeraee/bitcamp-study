// # 클래스 변수와 인스턴스 변수 생성 시점과 메모리 영역
//
package com.eomcs.oop.ex03;

public class Exam0140 {

  static class A {
    static int v1;
    int v2; // 인스턴스 필드
  }

  public static void main(String[] args) {

    // 클래스 변수는 클래스가 로딩되는 순간 바로 사용할 수 있다.
    // 클래스가 로딩되는 경우:
    // - 클래스 변수나 클래스 메서드를 사용할 때
    // - 인스턴스를 생성할 때
    // - 단 중복 로딩되지 않는다.
    //
    A.v1 = 100; //// 클래스이름으로 변수 할수있는건 무조건 스태틱 필드

    // v2 는 인스턴스 변수이기 때문에 사용하기 전에 new 명령으로 먼저 생성해야 한다.
    // A.v2 = 200; // 컴파일 오류!

    A p = new A(); //// 로컬변수////A클래스의 인스턴스 만들때 non-static 변수인 v2가 heap에 만들고 그 주소를 레퍼런스 변수p에 저장한다.
    // 이제 v2 변수는 Heap에 생성되었다.
    // A클래스의 인스턴스를 만들 때
    // static 이 안붙은 변수(non-static 변수 = 인스턴스 변수)가 그 대상이다.
    //
    // v2 인스턴스 변수는 인스턴스 주소를 통해 사용해야 한다.
    // 클래스이름으로 사용할 수 없다.
    // A.v2 = 200; // 컴파일 오류!

    p.v2 = 200; // OK! ////a
    ////// p 레퍼런스가 가르키는 인스턴스에서 변수 v2에 200을 저장한다

    // 인스턴스 변수는 인스턴스를 만들 때 마다 생성된다.
    A p2 = new A(); // 새 v2 변수가 생성된다. //////클래스 A가 인스턴스 변수를 생성할때 레퍼런스 p2에 인스턴스 변수를 저장한다ㅗㅠ
    p2.v2 = 300;/// p2가 가르키는 인스턴스 필드

    System.out.printf("A.v1=%d, p.v2=%d, p2.v2=%d\n", A.v1, p.v2, p2.v2);
  }
}
